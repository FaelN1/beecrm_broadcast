name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: broadcast_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma client
      run: npx prisma generate

    - name: Lint
      run: npm run lint
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/broadcast_test?schema=public
        REDIS_URL: redis://localhost:6379
        NODE_ENV: development
        PORT: 3000
        BROADCAST_WEBHOOK_URL: https://webhook.site/4cff14ee-80cb-4624-b576-b9c304d50251
        AWS_S3_CESS_KEY_ID: minioadmin
        AWS_SECRET_ACCESS_KEY: minioadmin
        AWS_REGION: us-east-1
        AWS_S3_BUCKET: broadcast-files
        AWS_S3_ENDPOINT: http://localhost:9000
        AWS_S3_FORCE_PATH_STYLE: true
        MESSAGE_API_ENDPOINT: https://diogenes.beecrm.io/api/messages
        MESSAGE_API_TOKEN: seu-token-de-autenticacao
        MOCK_MESSAGE_API: true
        SMTP_HOST: smtp.gmail.com
        SMTP_PORT: 587
        SMTP_SECURE: false
        SMTP_USER: nicolasrafael178@gmail.com
        SMTP_PASS: lxbhsnjbqmrmbpxs
        EMAIL_FROM: noreply@beecrm.io