version: '3.8'

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - minio
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/broadcast?schema=public
  #     - REDIS_URL=redis://redis:6379
  #     - MOCK_MESSAGE_API=true
  #     - AWS_ACCESS_KEY_ID=minioadmin
  #     - AWS_SECRET_ACCESS_KEY=minioadmin
  #     - AWS_REGION=us-east-1
  #     - AWS_S3_BUCKET=broadcast-files
  #     - AWS_S3_ENDPOINT=http://minio:9000
  #     - AWS_S3_FORCE_PATH_STYLE=true
  #     - COMPOSE_BAKE=true
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   networks:
  #     - broadcast-network

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=broadcast
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - broadcast-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - broadcast-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9001" /data
    networks:
      - broadcast-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - broadcast-network
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/broadcast-files;
      /usr/bin/mc policy set public myminio/broadcast-files;
      exit 0;
      "

networks:
  broadcast-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data: